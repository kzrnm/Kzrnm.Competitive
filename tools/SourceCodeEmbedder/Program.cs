using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using Microsoft.CodeAnalysis;

namespace SourceCodeEmbedder
{
    class Program
    {
        static void Main(string[] args)
        {
            string sourcePath;
            var options = new HashSet<string>(args.Where(str => str.StartsWith("-")));
            args = args.Where(str => !str.StartsWith("-")).ToArray();
            if (args.Length == 0)
            {
                Console.Error.WriteLine("input source directroy path:");
                sourcePath = Console.ReadLine();
            }
            else
            {
                sourcePath = args[0];
            }
            new Program(sourcePath).Run();
        }

        public Program(string sourcePath) : this(sourcePath, Path.Combine(sourcePath, "Embedded")) { }
        public Program(string sourcePath, string expanderDirPath)
        {
            SourcePath = sourcePath;
            EmbeddedDirPath = expanderDirPath;
        }

        public string SourcePath { get; }
        public string EmbeddedDirPath { get; }

        public void Run()
        {
            var infos = Directory.EnumerateFiles(SourcePath, "*.cs", SearchOption.AllDirectories)
                .Select(p => AclFileInfoRaw.ParseFile(p, SourcePath))
                .Where(info => info.TypeNames.Where(s => !s.StartsWith("AtCoder.Embedded")).Any());

            var dep = new AclFileInfoWithDependency(infos);

            Directory.CreateDirectory(EmbeddedDirPath);
            using var outputFs = new FileStream(Path.Combine(EmbeddedDirPath, "AutoGenerated.cs"), FileMode.Create, FileAccess.Write);
            using var outputWriter = new StreamWriter(outputFs);
            using var sr = new StringReader(Resource.AclFileInfoTemplate);

            var line = sr.ReadLine();
            while (line != null)
            {
                if (line == "//#####embed")
                {
                    foreach (var d in dep.ToEmbededStringLines())
                    {
                        outputWriter.WriteLine(d);
                    }
                }
                else
                    outputWriter.WriteLine(line);

                line = sr.ReadLine();
            }
        }
    }
}
