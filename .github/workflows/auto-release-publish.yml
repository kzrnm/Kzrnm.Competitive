name: Auto release publish

on:
  push:
    branches:
      - main
    paths:
      - Library/Competitive.Library/**
      - "!Library/**/_title.csv"
      - "!**.md"
  workflow_dispatch:
    inputs:
      force-release:
        type: boolean
        default: false

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  WORKFLOW_BUILD_SLN: Library/Competitive.Library.sln
  PACK_CSPROJ: Library/Competitive.Library/Competitive.Library.csproj

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}
      is-new-month: ${{ steps.prev-version.outputs.is-new-month }}
    steps:
      - uses: actions/checkout@v4
      - id: date
        run: echo "date=$(date "+%Y.%m%d.%H%M")" >> $GITHUB_OUTPUT
      - id: prev-version
        run: python tools/action/prev_version.py ${{ steps.date.outputs.date }} >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: [get-version]
    env:
      VERSION: ${{needs.get-version.outputs.date}}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            3.1.x
            7.0.x
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Build.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build
        run: dotnet build ${{ env.WORKFLOW_BUILD_SLN }} -c Release -p:Version=$VERSION
      - name: Test
        run: dotnet test ${{ env.WORKFLOW_BUILD_SLN }} --no-build --logger GitHubActions -c Release
      - name: Pack
        run: dotnet pack ${{ env.PACK_CSPROJ }} --no-build -c Release -o bin/Packages/Release -p:Version=$VERSION
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: bin/Packages/Release

  publish:
    needs: [get-version, build]
    uses: kzrnm/dotnet-actions/.github/workflows/publish.yml@v1
    if: ${{ inputs.force-release || needs.get-version.outputs.is-new-month }}
    with:
      artifact-name: dist
      version: ${{needs.get-version.outputs.date}}
    secrets:
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
