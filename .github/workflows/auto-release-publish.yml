name: Auto release publish

on:
  push:
    branches:
      - main
    paths:
      - Library/Competitive.Library/**
      - "!**.md"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  WORKFLOW_BUILD_SLN: Library/Competitive.Library.sln
  PACK_CSPROJ: Library/Competitive.Library/Competitive.Library.csproj

jobs:
  get-date:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.date.outputs.date }}
    steps:
      - id: date
        run: echo "date=$(date "+%Y.%m%d.%H%M")" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: [get-date]
    env:
      VERSION: ${{needs.get-date.outputs.version}}
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            3.1.x
            6.0.x
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build
        run: dotnet build ${{ env.WORKFLOW_BUILD_SLN }} -c Release -p:Version=$VERSION
      - name: Test
        run: dotnet test ${{ env.WORKFLOW_BUILD_SLN }} --no-build --logger GitHubActions -c Release
      - name: Pack
        run: dotnet pack ${{ env.PACK_CSPROJ }} --no-build -c Release -o bin/Packages/Release -p:Version=$VERSION
      - uses: actions/upload-artifact@v1
        with:
          name: dist
          path: bin/Packages/Release

  publish:
    needs: [get-date, build]
    uses: kzrnm/dotnet-actions/.github/workflows/publish.yml@v1
    with:
      artifact-name: dist
      version: ${{needs.get-date.outputs.version}}
      is-prerelease: ${{ needs.get-version.outputs.is-prerelease == 'true' }}
    secrets:
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
