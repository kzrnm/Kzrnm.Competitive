name: verify

on:
  push:
    branches:
      - main
    paths:
      - "Library/**"
      - "!Library/.competitive-verifier/prev-result.json.gz"
      - .github/workflows/verify.yml
  pull_request:
    types: [opened, synchronize]
    paths:
      - "Library/**"
      - "!Library/.competitive-verifier/prev-result.json.gz"
      - "!**.md"
  workflow_dispatch:
    inputs:
      ignore_prev_result:
        type: boolean
        default: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  WORKFLOW_BUILD_SLN: Competitive.Library.sln
  TZ: Asia/Tokyo

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: Library
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            7.0.x
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Build.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Test
        run: dotnet test $WORKFLOW_BUILD_SLN

  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Library
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            7.0.x
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Build.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: setup CompetitiveVerifierCsResolver
        run: dotnet tool install -g CompetitiveVerifierCsResolver

      - name: Trim solution
        run: |
          sed -i -e '/{03D41CA3-57BF-4EE3-B1BB-AD427B08D962}\./d' $WORKFLOW_BUILD_SLN
          sed -i -e '/{03D41CA3-57BF-4EE3-B1BB-AD427B08D962} =/d' $WORKFLOW_BUILD_SLN
          sed -i -e '/= "Competitive.Benchmark"/d' $WORKFLOW_BUILD_SLN
          sed -i -E "N;s/EndProject\r?\nEndProject/EndProject/g" $WORKFLOW_BUILD_SLN

      - name: Build
        run: dotnet build $WORKFLOW_BUILD_SLN -c Release
      - name: Unit test
        run: dotnet test $UNITTEST_CSPROJ --logger "CompetitiveVerifier;OutDirectory=${{runner.temp}}/VerifierCsUnitTestResult" --no-build  -c Release
        env:
          UNITTEST_CSPROJ: Competitive.Library.Test/Competitive.Library.Test.csproj

      - name: Resolve net7.0
        run: dotnet run --project $VERIFY_CSPROJ --framework $FRAMEWORK --no-launch-profile --no-build -c Release | tee "${{runner.temp}}/problems-$FRAMEWORK.json"
        env:
          VERIFY_CSPROJ: Checker/Checker.csproj
          FRAMEWORK: net7.0

      - name: cs-resolve
        uses: competitive-verifier/actions/cs-resolve@v1
        with:
          working-directory: Library
          solution: ${{ env.WORKFLOW_BUILD_SLN }}
          output-path: ${{runner.temp}}/verify_files.json
          exclude: |
            **/obj/**
            **/Usings.cs
            Competitive.Library.Test/SourceExpanderTest.cs
            Checker/BaseSover.cs
            Checker/Program.cs
          unittest-result: ${{runner.temp}}/VerifierCsUnitTestResult/*.csv
          problems: ${{runner.temp}}/problems-*.json
          msbuild-properties: Configuration=Release

      - name: Expand Test
        run: dotnet build Expand.Test/Expand.Test.csproj
        continue-on-error: true
        id: expand-test

      - name: Update TITLE
        shell: python
        run: |
          import csv
          import pathlib
          import sys
          import json


          input_path = r"${{runner.temp}}/verify_files.json"
          with pathlib.Path(input_path).open("rb") as fp:
              ver = json.load(fp)
          for path in pathlib.Path(".").glob("**/_title.tsv"):
              with path.open(mode="r", encoding="utf-8") as fp:
                  for cols in csv.reader(fp, delimiter="\t"):
                      file = ver["files"][(path.parent / cols[0]).as_posix()]
                      file.setdefault("document_attributes", dict())["TITLE"] = cols[1]

          ver["files"]["Expand.Test/Expand.Test.csproj"] = {
              "dependencies": [
                  "Competitive.Library/+Runner/Program.cs"
              ],
              "verification": [
                  {
                      "type": "const",
                      "status": "${{steps.expand-test.outcome == 'success' && 'success' || 'failure'}}"
                  }
              ],
              "document_attributes": {}
          }
          ver_json = json.dumps(ver, separators=(',', ':'))
          with pathlib.Path(input_path).open("w", encoding="utf-8") as fp:
              fp.write(ver_json)
          print(ver_json)

      - name: Upload verify_files.json
        uses: competitive-verifier/actions/upload-verify-artifact@v1
        with:
          file: ${{runner.temp}}/verify_files.json
      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{github.sha}}
          path: Library/Checker/bin/Release

  verify:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Library
    needs: [setup]
    env:
      SPLIT_SIZE: 20
    strategy:
      matrix:
        # prettier-ignore
        index:
          ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09",
           "10", "11", "12", "13", "14", "15", "16", "17", "18", "19"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 123456789

      - name: Restore cached results
        if: ${{ ! inputs.ignore_prev_result }}
        uses: actions/cache/restore@v3
        id: restore-cached-results
        with:
          path: ${{github.workspace}}/Library/.competitive-verifier/merged-result.json
          key: ${{ runner.os }}-verify-result-${{ hashFiles('Library/**/*.cs') }}
          restore-keys: |
            ${{ runner.os }}-verify-result-

      - name: Expand gzip result
        working-directory: Library/.competitive-verifier
        run: gunzip prev-result.json.gz

      - name: Copy result
        if: steps.restore-cached-results.outputs.cache-matched-key != ''
        working-directory: Library/.competitive-verifier
        run: cp ${{github.workspace}}/Library/.competitive-verifier/merged-result.json prev-result.json

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v1
        with:
          cache-pip: true

      - name: Download verify_files.json
        uses: competitive-verifier/actions/download-verify-artifact@v1

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            7.0.x
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: binary-${{github.sha}}
          path: Library/Checker/bin/Release

      - name: Verify
        uses: competitive-verifier/actions/verify@v1
        with:
          working-directory: Library
          prev-result: .competitive-verifier/prev-result.json
          destination: ${{runner.temp}}/result.json
          split-size: ${{ env.SPLIT_SIZE }}
          split-index: ${{ matrix.index }}
          timeout: 1200
        env:
          YUKICODER_TOKEN: ${{ secrets.YUKICODER_TOKEN }}
      - name: Upload result artifact
        uses: actions/upload-artifact@v3
        with:
          name: Result-${{ runner.os }}-${{ matrix.index }}
          path: ${{runner.temp}}/result.json
          retention-days: 1

  docs-and-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Library
    needs: [verify]
    outputs:
      upload-pages: ${{steps.upload-pages.outcome == 'success'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 123456789

      - name: Download verify_files.json and all artifacts
        id: all-artifacts
        uses: competitive-verifier/actions/download-verify-artifact@v1
        with:
          working-directory: Library
          download-all: true
          artifact-root: .artifacts/

      - name: Extract bundled
        shell: bash
        run: |
          rm -rf .competitive-verifier/bundled
          if test -d "$SRCDIR"; then
            mkdir -p .competitive-verifier/
            mv "$SRCDIR" .competitive-verifier/bundled
          else
            echo "$SRCDIR does not exist."
          fi
        env:
          SRCDIR: .artifacts/Bundled-${{ runner.os }}

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v1
        with:
          cache-pip: true

      - name: Merge results
        uses: competitive-verifier/actions/merge-result@v1
        with:
          working-directory: Library/.competitive-verifier
          result-files: ${{ steps.all-artifacts.outputs.artifacts-root }}/Result-*/result.json
          output-path: ${{github.workspace}}/Library/.competitive-verifier/merged-result.json
      - name: Save cached results
        if: ${{ ! inputs.ignore_prev_result }}
        uses: actions/cache/save@v3
        with:
          path: ${{github.workspace}}/Library/.competitive-verifier/merged-result.json
          key: ${{ runner.os }}-verify-result-${{ hashFiles('Library/**/*.cs') }}

      - name: Docs
        uses: competitive-verifier/actions/docs@v1
        with:
          working-directory: Library
          verify-result: ${{github.workspace}}/Library/.competitive-verifier/merged-result.json
          destination: ${{github.workspace}}/_jekyll
          write-summary: true
         
      - name: Replace csproj with xml
        run: |
          sed -ie "s/pathExtension: csproj/pathExtension: xml/" ${{github.workspace}}/_jekyll/Expand.Test/Expand.Test.csproj.md

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: _jekyll
          destination: _site
      - name: Upload artifact
        id: upload-pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: _site

      - name: Check
        uses: competitive-verifier/actions/check@v1
        with:
          verify-result: ${{github.workspace}}/Library/.competitive-verifier/merged-result.json
  deploy:
    if: always() && github.ref == 'refs/heads/main' && needs.docs-and-check.outputs.upload-pages == 'true'
    needs: docs-and-check
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
